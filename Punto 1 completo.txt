B. Esquema donde describa las tareas que usted definio en el desarrollo de los algoritmos propuestos
Primero comenzamos por hacer la funcion que nos permite generar la matriz 8X8 (dimensiones definidas), para posteriormente imprimirla en esta misma funcion, y de esta manera ya podemos mostrar al usuario la base de "letrero" con el que estamos trabajando. Una vez esta funcion esta lista, procedemos a trabajr en los patrones definidos en el pdf, el primer patron se desarrollo "partiendo" la matriz en 4 partes, donde en el primer 1/4 (esquina superior izquierda) de la matriz creamos una parte del patron con dos ciclos for, y posteriormente simplemente hacemos un espejo de este 1/4 al resto de la matriz, copiando primero la parte de arriba y una vez esta este lista, procedemos a crear simetria en la parte posterior, y una vez esto haya terminado, imprimimos la matriz. Para el segundo patron nos metemos por las diagonales, ya que es un patron que forma una x. empezamos evaluando elemento por elemento, paa verficar cuales son de las diagonales que necesitamos modificar y cuales no (diagonal principal y secundaria), y si el elemento cumple con estas condiciones, cambiamos su valor a1, y asi hasta recorrer toda la matriz, para el tercer patron nos apoyamos en las filas de la matriz, entonces empezamos recorriendola y definiendo si la fila es par o impar, como para cada tipo de fila tenemos un patron especifico, al identificar  tipo de fila simplemente debemos aplicar el patron correspondiente, siempre son 2 leds prendidos por fila, y en las pares se prende junto abajo de las que estan prendidas en los impares, una vez se hayan hecho las modificaciones en la matriz procedemos a imprimirla en pantalla. Para el cuarto patron primero, dividimos la cuadrícula en dos partes, la superior y la inferior. Luego, vamos fila por fila. Si estamos en la parte superior, decidimos si un LED debe estar encendido o apagado según su posición en esa fila. Si estamos en la parte inferior, aplicamos una lógica diferente para los LED en esa fila. Después de todo este juego de luces, mostramos nuestra obra de arte en la consola, línea por línea, para ver los patrones que hemos creado. 


Ahora nos vamos a la funcion publik, comenzamos comprobando el funcionamiento de leds, comenzamos con todos los leds de la matriz apagados, y despues pedimos al usuario las veces que desea verificar y el tiempo que desea que las luces se apaguen, encendemos y apagamos los leds tantas veces como haya dicho el usuario y cuando termina sabemos que la verificacion fue exitosa. Para el numerab, que es mostrar imagen de prueba, iniciamos los elementos de la matriz en 0 (apagados) y vamos pidiendo al usuario que introduzca fila por fila el patron que desea generar, vamos actualizando la matriz a medida que se ingresa el patrony finalmente la imprimimos. Para el numeral c, tenemos 4 patrones predeterminados que podemos mostrar en la matriz, una vez las funciones para cada patron fueron implementadas, creamos un case para dejar que el usuario elija el patron que desea ver, una vez ingrese la opcion simplemente imprimimos la matriz modificada. 

Para el la creacion del arduino acudimos a un tutorial de youtube, ya que habia una restriccion de 7 pines, debemos usar un tablero de circuitos y dos registros de desplazamiento, esto nos permite conectar todos los leds sin necesidad de usar muchos pines del arduino. 

C. Algoritmos implementados 
Matrices y arreglos, ciclos, condicionales y funciones, espejos para la creacion de patrones, retardos para la simulacion de visualizacion de una imagen en los leds

D. Problemas de desarrollo que afronto
La creacion de patrones de forma no trivial, esto obliga a pensar y generar una imagen por medio de secuencias en vez de simplemente prender los leds a usar, armar el arduino con las restricciones y sin saber mucho del tema, la adaptacion del codigo de c++ al arduino, ya que es muy especifico dependiendo de la forma en la que se haya armado el circuito, y aunque el lenguaje sea similar, se dificulta bastante por la posicion de los pines, resistencias para que el arduino no se dañe, en general la parte del arduino estuvo bastante complicada para lo que llevamos del curso

E. Evolucion de la solucion y consideraciones a tener en cuenta en la implementacion 
Que no importa tener todo el codigo listo en c++ porque todo va a tener que ser modificado a la hora de programar el arduino
Borrar las matrices despues de cada uso porque se debe usar memoria dinamica y de no hacerlo puede que el arduino no funcione o se dañe

